/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: car.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as car_pb from './car_pb';


export class CarServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorsaveCar = new grpcWeb.MethodDescriptor(
    '/CarService/saveCar',
    grpcWeb.MethodType.UNARY,
    car_pb.CarSaveRequest,
    car_pb.CarSaveResponse,
    (request: car_pb.CarSaveRequest) => {
      return request.serializeBinary();
    },
    car_pb.CarSaveResponse.deserializeBinary
  );

  saveCar(
    request: car_pb.CarSaveRequest,
    metadata: grpcWeb.Metadata | null): Promise<car_pb.CarSaveResponse>;

  saveCar(
    request: car_pb.CarSaveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: car_pb.CarSaveResponse) => void): grpcWeb.ClientReadableStream<car_pb.CarSaveResponse>;

  saveCar(
    request: car_pb.CarSaveRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: car_pb.CarSaveResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/CarService/saveCar',
        request,
        metadata || {},
        this.methodDescriptorsaveCar,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/CarService/saveCar',
    request,
    metadata || {},
    this.methodDescriptorsaveCar);
  }

  methodDescriptorsearchCar = new grpcWeb.MethodDescriptor(
    '/CarService/searchCar',
    grpcWeb.MethodType.UNARY,
    car_pb.SearchRequest,
    car_pb.SearchResponse,
    (request: car_pb.SearchRequest) => {
      return request.serializeBinary();
    },
    car_pb.SearchResponse.deserializeBinary
  );

  searchCar(
    request: car_pb.SearchRequest,
    metadata: grpcWeb.Metadata | null): Promise<car_pb.SearchResponse>;

  searchCar(
    request: car_pb.SearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: car_pb.SearchResponse) => void): grpcWeb.ClientReadableStream<car_pb.SearchResponse>;

  searchCar(
    request: car_pb.SearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: car_pb.SearchResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/CarService/searchCar',
        request,
        metadata || {},
        this.methodDescriptorsearchCar,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/CarService/searchCar',
    request,
    metadata || {},
    this.methodDescriptorsearchCar);
  }

  methodDescriptorsearchLowestTotalAnnualCost = new grpcWeb.MethodDescriptor(
    '/CarService/searchLowestTotalAnnualCost',
    grpcWeb.MethodType.UNARY,
    car_pb.LowestTotalAnnualCostRequest,
    car_pb.LowestTotalAnnualCostResponse,
    (request: car_pb.LowestTotalAnnualCostRequest) => {
      return request.serializeBinary();
    },
    car_pb.LowestTotalAnnualCostResponse.deserializeBinary
  );

  searchLowestTotalAnnualCost(
    request: car_pb.LowestTotalAnnualCostRequest,
    metadata: grpcWeb.Metadata | null): Promise<car_pb.LowestTotalAnnualCostResponse>;

  searchLowestTotalAnnualCost(
    request: car_pb.LowestTotalAnnualCostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: car_pb.LowestTotalAnnualCostResponse) => void): grpcWeb.ClientReadableStream<car_pb.LowestTotalAnnualCostResponse>;

  searchLowestTotalAnnualCost(
    request: car_pb.LowestTotalAnnualCostRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: car_pb.LowestTotalAnnualCostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/CarService/searchLowestTotalAnnualCost',
        request,
        metadata || {},
        this.methodDescriptorsearchLowestTotalAnnualCost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/CarService/searchLowestTotalAnnualCost',
    request,
    metadata || {},
    this.methodDescriptorsearchLowestTotalAnnualCost);
  }

}

